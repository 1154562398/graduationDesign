<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.zjlzjl.eurekaclient.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="fun.zjlzjl.eurekaclient.DTO.userDto">
        <result column="id" property="id"/>
        <result column="userName" property="userName"/>
        <result column="nickName" property="nickName"/>
        <result column="enabled" property="enabled"/>
        <result column="email" property="email"/>
        <result column="QQ" property="qq"/>
        <result column="avatar" property="avatar"/>
        <result column="reg_time" property="regTime"/>
        <collection property="roles" ofType="fun.zjlzjl.eurekaclient.entity.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>
    <select id="getRolesByUid" parameterType="long" resultType="fun.zjlzjl.eurekaclient.entity.Role">
        SELECT r.* FROM roles r,roles_user ru WHERE r.`id`=ru.`rid` AND ru.`uid`=#{uid}
    </select>
    <select id="getUserByNickname" resultMap="BaseResultMap">
        SELECT t.*,r.`id` AS rid,r.`name` AS rname
        from
        ( SELECT u.id,u.username,u.enabled,ui.nickName,ui.email,ui.avatar,ui.QQ,ui.reg_time FROM `user` u LEFT JOIN userinfo ui on u.id=ui.userId) as t ,roles r,roles_user ru
        WHERE
        t.`id`=ru.`uid`
        AND r.`id`=ru.`rid`
        AND t.`id` NOT IN
        (SELECT s.`id` FROM user s,roles_user ru WHERE s.`id`=ru.`uid` AND ru.`rid`=1)
        <choose>
            <when test="nickname!=null and nickname!=''">
                and t.nickname like concat('%',#{nickname},'%') ORDER BY t.`id`
            </when>
            <otherwise>
                ORDER BY t.`id` limit 20
            </otherwise>
        </choose>
    </select>
    <update id="updateUserEnabled">
        UPDATE user set enabled=#{enabled} WHERE id=#{uid}
    </update>

</mapper>
